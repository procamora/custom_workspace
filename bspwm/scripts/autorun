#!/bin/bash

echo "init autorun"

# keyboard Internation English
setxkbmap eu &

# Key NumLock activate by default
numlockx &

# monitoring battery
killall -9 -q battery.sh
test -f /sys/class/power_supply/BAT0/capacity && ~/.config/bspwm/scripts/battery.sh & 

# Automounter for removable media
killall -9 -q udiskie
udiskie &
udiskie --no-automount --no-notify --tray &

# autorun scripts
find ~/scripts/ -name "*.py" -exec chmod u+x {} \;
find ~/scripts/ -name "*.sh" -exec chmod u+x {} \;
find ~/scripts/ -name "*.exp" -exec chmod u+x {} \;


! (ssh-add -l > /dev/null) && (eval "$(ssh-agent -s)" > /dev/null) &
~/scripts/load_key_personal.exp &

# delay for establish network connection
(sleep 10 && bash ~/scripts/mountDirSSH.sh) &
(sleep 5 && ! (df | grep -q "decrypt_gdrive") && mkdir -p ~/decrypt_gdrive && expect ~/scripts/encfs.exp) &


# if exits touchpad, enable tap to click
id_touchpad=$(xinput | /bin/grep -i "TouchPad" | xargs | cut -d "=" -f2 | cut -d " " -f1)
if [ "${?}" = "0" ] && [ "${id_touchpad}" != "" ]; then
    id_tap=$(xinput list-props 12 | /bin/grep -i "Tapping Enabled (" | xargs | cut -d "(" -f2 | cut -d ")" -f1)
    xinput set-prop $id_touchpad $id_tap 1
fi

PROGRAMS=( konsole firefox Telegram )

for prog in "${PROGRAMS[@]}"; do
    # killall -q $prog
    ! (ps aux | /bin/grep "$prog" | /bin/grep -v "grep" > /dev/null) && $prog &
    sleep 0.2
done


# ! (ps aux | /bin/grep "Telegram" | /bin/grep -vq "grep") && (sleep 5 && Telegram > /dev/null 2>&1) &

# out for because program requiere arguments
! (ps aux | /bin/grep "insync" | /bin/grep -vq "grep") && (sleep 5 && insync start > /dev/null 2>&1) &


#export SSH_AUTH_SOCK=~/.ssh/ssh-agent.$HOSTNAME.sock
#ssh-add -l 2>/dev/null >/dev/null
#if [ $? -ge 2  ]; then
#      ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
#fi


check=$(python3 ~/.config/sxhkd/check.py)

if [ "$check" = "No duplicates" ]; then
    notify-send -i ~/.config/icons/sxhkd.svg -u low -t 1000 "sxhkd" "Correct Configuration"
else
    notify-send -i ~/.config/icons/sxhkd.svg -u critical -t 3000 "sxhkd" "Incorrect Configuration"
fi


SERVICES=( bspwm sxhkd feh compton dunst polybar xautolock redshift udiskie)

for serv in "${PROGRAMS[@]}"; do
    # killall -q $prog
    ! (ps aux | /bin/grep "$serv" | /bin/grep -v "grep" > /dev/null) && notify-send -t 3000 -u critical "$serv" "Service $serv is not active"
    sleep 0.1
done


echo "finish autorun"
